generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model code {
  id         Int       @id @default(autoincrement())
  event      String?   @db.VarChar(255)
  email      String?   @default("0") @db.VarChar(255)
  code       String?   @db.VarChar(255)
  status     Int?      @default(0)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
}

model coupon {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  code       String    @default("") @db.VarChar(11)
  type       Int?      @default(3)
  expire     DateTime? @db.Timestamp(0)
  status     Int       @default(0)
  created_at DateTime? @default(now()) @db.Timestamp(0)
}

model experience {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  company     String    @default("") @db.VarChar(128)
  country     String?   @db.VarChar(64)
  city        String?   @db.VarChar(32)
  title       String    @default("") @db.VarChar(128)
  start_at    DateTime? @db.Timestamp(0)
  end_at      DateTime? @db.Timestamp(0)
  is_working  Boolean?
  description String?   @db.Text
  uid         Int
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  updated_at  DateTime? @default(now()) @db.Timestamp(0)
  owner       user?     @relation(fields: [uid], references: [id])

  @@index([uid])
}

model notify {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  type       Int
  from       Int?
  to         Int
  title      String?   @db.VarChar(255)
  content    String?   @db.VarChar(1024)
  status     Int?      @default(0)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
  owner      user?     @relation(fields: [to], references: [id], name: "receiver")
  sender     user?     @relation(fields: [from], references: [id], name: "sender")

  @@index([from])
  @@index([to])
  @@index([status])
}

model permission {
  id          Int               @id @default(autoincrement()) @db.UnsignedInt
  name        String?           @default("") @db.VarChar(255)
  flag        Int
  extra       Int?
  target      Int?
  description String?           @db.Text
  created_at  DateTime          @default(now()) @db.Timestamp(0)
  updated_at  DateTime          @default(now()) @db.Timestamp(0)
  status      Int?
  url         String?           @db.VarChar(255)
  roles       role_permission[]
}

model picture {
  id                    Int                 @id @default(autoincrement())
  user_id               Int?
  project_name          String?             @db.VarChar(255)
  img_url               String?             @default("") @db.VarChar(255)
  litpic_url            String              @db.VarChar(255)
  picture_public_tag_id Int?                @default(0)
  status                Int?                @default(0)
  level                 Int?                @default(0)
  created_at            DateTime?           @default(now()) @db.Timestamp(0)
  updated_at            DateTime?           @default(now()) @db.Timestamp(0)
  owner                 user?               @relation(fields: [user_id], references: [id])
  tag                   picture_public_tag? @relation(fields: [picture_public_tag_id], references: [id])

  tags      tag[]
  named_tag level? @relation(fields: [level_id], references: [id])
  level_id  Int?

  @@index([user_id])
  @@index([picture_public_tag_id])
  @@index([level_id])
}

model picture_public_tag {
  id         Int       @id @default(autoincrement())
  name       String?   @db.VarChar(255)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
  pictures   picture[]
}

model portfolio {
  id            Int       @id @default(autoincrement()) @db.UnsignedInt
  uid           Int
  img_url       String    @db.Text
  thumbnail_url String?   @db.Text
  title         String?   @db.VarChar(32)
  remark        String?   @db.Text
  import_status Int?      @default(0)
  created_at    DateTime? @default(now()) @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)
  user          user?     @relation(fields: [uid], references: [id])

  @@index([uid])
}

model preference {
  id         Int       @id @default(autoincrement())
  name       String?   @db.VarChar(255)
  img_url    String?   @db.LongText
  user_id    Int?
  folder_id  Int?      @default(0)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
}

model prime {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  type      Int       @default(0)
  expire    DateTime? @db.Date
  uid       Int       @unique(map: "unique_uid")
  create_at DateTime? @default(now()) @db.Timestamp(0)
  update_at DateTime? @default(now()) @db.Timestamp(0)
  owner     user?     @relation(fields: [uid], references: [id])

  @@index([expire], map: "expire")
}

model profile {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  title       String?   @db.VarChar(128)
  gender      Int?
  phone       String?   @db.VarChar(32)
  country     String?   @db.VarChar(64)
  state       String?   @db.VarChar(32)
  city        String?   @db.VarChar(32)
  zipcode     Int?
  taxId       String?   @db.VarChar(32)
  description String?   @db.Text
  uid         Int       @unique(map: "uid")
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  updated_at  DateTime? @default(now()) @db.Timestamp(0)
  owner       user?     @relation(fields: [uid], references: [id])
}

model project {
  id           Int            @id @default(autoincrement())
  project_name String?        @db.VarChar(255)
  user_id      Int?           @default(0)
  total_size   BigInt?        @default(0)
  created_at   DateTime?      @default(now()) @db.Timestamp(0)
  updated_at   DateTime?      @default(now()) @db.Timestamp(0)
  books        project_list[]
  owner        user?          @relation(fields: [user_id], references: [id])

  @@index([user_id])
}

model project_list {
  id           Int                  @id @default(autoincrement())
  project_name String?              @db.VarChar(255)
  project_id   Int?                 @default(0)
  user_id      Int?                 @default(0)
  pdf_url      String?              @db.VarChar(255)
  page         Int?
  created_at   DateTime?            @default(now()) @db.Timestamp(0)
  updated_at   DateTime?            @default(now()) @db.Timestamp(0)
  pages        project_list_image[]
  project      project?             @relation(fields: [project_id], references: [id])
  owner        user?                @relation(fields: [user_id], references: [id])

  @@index([user_id])
  @@index([project_id])
}

model project_list_image {
  id              Int           @id @default(autoincrement())
  project_list_id Int?
  page            Int?          @default(0)
  img_url         String?       @db.VarChar(255)
  litpic_url      String?       @db.VarChar(255)
  created_at      DateTime?     @default(now()) @db.Timestamp(0)
  updated_at      DateTime?     @default(now()) @db.Timestamp(0)
  book            project_list? @relation(fields: [project_list_id], references: [id])

  @@index([project_list_id])
}

model project_mark {
  id              Int       @id @default(autoincrement())
  project_id      Int?      @default(0)
  project_list_id Int?      @default(0)
  user_id         Int?      @default(0)
  data            String?   @db.LongText
  page            Int?      @default(1)
  created_at      DateTime? @default(now()) @db.Timestamp(0)
  updated_at      DateTime? @default(now()) @db.Timestamp(0)
}

model project_share {
  id         Int       @id @default(autoincrement())
  project_id Int?      @default(0)
  link       String?   @db.VarChar(255)
  user_id    Int?      @default(0)
  auth       String?   @db.VarChar(255)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
}

model role {
  id              Int               @id @default(autoincrement()) @db.UnsignedInt
  name            String            @default("") @db.VarChar(255)
  description     String?           @db.LongText
  created_at      DateTime          @default(now()) @db.Timestamp(0)
  updated_at      DateTime          @default(now()) @db.Timestamp(0)
  status          Int               @default(1)
  users           user_role[]
  role_permission role_permission[]

  @@index([name], map: "name")
}

model role_permission {
  id         Int         @id @default(autoincrement()) @db.UnsignedInt
  rid        Int
  pid        Int
  created_at DateTime    @default(now()) @db.Timestamp(0)
  updated_at DateTime    @default(now()) @db.Timestamp(0)
  permission permission? @relation(fields: [pid], references: [id])
  role       role?       @relation(fields: [rid], references: [id])

  @@index([rid])
  @@index([pid])
}

model skill {
  id          Int          @id @default(autoincrement()) @db.UnsignedInt
  name        String       @unique(map: "name") @default("") @db.VarChar(32)
  remark      String?      @db.VarChar(1024)
  description String?      @db.VarChar(2048)
  created_at  DateTime?    @default(now()) @db.Timestamp(0)
  updated_at  DateTime?    @default(now()) @db.Timestamp(0)
  users       user_skill[]
}

model team {
  id         Int         @id @default(autoincrement()) @db.UnsignedInt
  name       String?     @default("") @db.VarChar(255)
  status     Int         @default(1)
  created_at DateTime?   @default(now()) @db.Timestamp(0)
  updated_at Int?
  users      user_team[]
}

model team_invition {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  from       Int
  to         String    @default("") @db.VarChar(255)
  permission Int       @default(65533)
  create_at  DateTime? @default(now()) @db.Timestamp(0)
}

model trial {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  type      Int       @default(1)
  uid       Int
  create_at DateTime? @default(now()) @db.Timestamp(0)
}

model user {
  id              Int            @id @default(autoincrement())
  name            String         @default("") @db.VarChar(255)
  email           String         @default("") @db.VarChar(255)
  password        String         @default("") @db.VarChar(255)
  avatar          String?        @db.VarChar(255)
  status          Int            @default(0)
  score           Int?           @default(0)
  created_at      DateTime?      @default(now()) @db.Timestamp(0)
  updated_at      DateTime?      @default(now()) @db.Timestamp(0)
  login_at        DateTime?      @db.Timestamp(0)
  profileId       Int?           @db.UnsignedInt
  primeId         Int?           @db.UnsignedInt
  auths           auth[]
  profile         profile?
  pictures        picture[]
  privatePictures user_picture[]
  projects        project[]
  books           project_list[]
  skills          user_skill[]
  experiences     experience[]
  prime           prime?
  roles           user_role[]
  teams           user_team[]
  portfolios      portfolio[]
  applies         apply[]
  inbox           notify[]       @relation("receiver")
  sendedBox       notify[]       @relation("sender")
  feedbacks       feedback[]
}

model auth {
  id       Int     @id @default(autoincrement())
  provider String
  email    String?
  name     String?
  avatar   String?
  uid      Int?
  owner    user?   @relation(fields: [uid], references: [id])

  @@index([uid])
}

model user_coupon {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  user_id    Int
  coupon_id  Int
  created_at DateTime? @default(now()) @db.Timestamp(0)
}

model user_picture {
  id            Int       @id @default(autoincrement())
  user_id       Int?
  project_name  String?   @db.VarChar(255)
  img_url       String?   @default("") @db.VarChar(255)
  litpic_url    String?   @db.VarChar(255)
  from          Int?      @default(0)
  folder_id     Int?      @default(0)
  import_status Int?      @default(0)
  created_at    DateTime? @default(now()) @db.Timestamp(0)
  updated_at    DateTime? @default(now()) @db.Timestamp(0)
  user          user?     @relation(fields: [user_id], references: [id])

  @@index([user_id])
}

model user_picture_folder {
  id          Int       @id @default(autoincrement())
  folder_name String?   @db.VarChar(255)
  num         Int?      @default(0)
  user_id     Int?      @default(0)
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  updated_at  DateTime? @default(now()) @db.Timestamp(0)
}

model user_picture_share {
  id         Int      @id @default(autoincrement())
  user_id    Int
  link       String   @db.VarChar(255)
  folder_id  Int?     @default(0)
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0)
}

model user_role {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  uid        Int
  rid        Int
  level      Int      @default(0)
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0)
  role       role?    @relation(fields: [rid], references: [id])
  user       user?    @relation(fields: [uid], references: [id])

  @@index([uid])
  @@index([rid])
}

model user_skill {
  uid        Int      @db.UnsignedInt
  sid        Int      @db.UnsignedInt
  user       user?    @relation(fields: [uid], references: [id])
  skill      skill?   @relation(fields: [sid], references: [id])
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0)

  @@unique([uid, sid])
  @@index([sid])
}

model user_team {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  uid        Int
  tid        Int
  created_at DateTime  @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
  status     Int       @default(1)
  team       team?     @relation(fields: [tid], references: [id])
  user       user?     @relation(fields: [uid], references: [id])

  @@index([uid])
  @@index([tid])
}

model user_verify_email {
  id         Int       @id @default(autoincrement())
  code       String?   @db.VarChar(255)
  email      String?   @db.VarChar(255)
  user_id    Int?
  status     Int?      @default(0)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
}

model skillTouser {
  A Int @db.UnsignedInt
  B Int

  @@unique([A, B], map: "_skillTouser_AB_unique")
  @@index([B], map: "_skillTouser_B_index")
  @@map("_skillTouser")
  @@ignore
}

model demand {
  id               Int          @id @default(autoincrement())
  link             String?      @db.VarChar(255)
  user_id          Int?         @default(0)
  share_user_id    Int?         @default(0)
  designer_user_id Int?         @default(0)
  preference_name  String?      @db.VarChar(255)
  type             Int?         @default(0)
  name             String?      @db.VarChar(255)
  size             Int?         @default(0)
  page             Int?
  remark           String?      @db.LongText
  email            String?      @db.VarChar(255)
  contact_number   String?      @db.VarChar(255)
  img_list         String?      @db.LongText
  logo_design      String?      @db.LongText
  folding          Int?         @default(0)
  category         Int?         @default(0)
  services         Int?         @default(0)
  printing_number  Int?         @default(0)
  printing_page    Int?         @default(0)
  printing_size    Int?         @default(0)
  cover_paper      Int?         @default(0)
  inner_paper      Int?         @default(0)
  staple           Int?         @default(0)
  finish           String?      @db.VarChar(255)
  picture_id       String?      @db.VarChar(255)
  attachments      attachment[]
  feedbacks        feedback[]
  budget_price     Decimal?     @default(0) @db.Decimal(50, 2)
  order_price      Decimal?     @default(0) @db.Decimal(50, 2)
  created_at       DateTime?    @default(now()) @db.Timestamp(0)
  updated_at       DateTime?    @default(now()) @db.Timestamp(0)
}

model attachment {
  id          Int     @id @default(autoincrement())
  name        String?
  link        String
  type        String  @default("image")
  Description String?

  demand    demand? @relation(fields: [demand_id], references: [id])
  demand_id Int?

  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)

  @@index([demand_id])
}

model feedback {
  id        Int     @id @default(autoincrement())
  score     Int
  demand    demand? @relation(fields: [demand_id], references: [id])
  demand_id Int?
  designer  user?   @relation(fields: [user_id], references: [id])
  user_id   Int?

  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)

  @@index([demand_id])
  @@index([user_id])
}

model size {
  id         Int       @id @default(autoincrement())
  name       String?   @db.VarChar(255)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
}

model apply {
  id         Int       @id @default(autoincrement())
  uid        Int
  from       user?     @relation(fields: [uid], references: [id])
  title      String?   @db.VarChar(255)
  content    String?   @db.Text
  type       Int
  extra      String?   @db.LongText
  status     Int?      @default(0)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)

  @@index([uid])
}

model tag {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  zh          String?   @unique
  cht         String?   @unique
  description String?   @db.Text
  picture     picture[]
  parent_id   Int?
  weight      Int?      @default(1)
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  updated_at  DateTime? @default(now()) @db.Timestamp(0)
}

model level {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?   @db.Text
  picture     picture[]
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  updated_at  DateTime? @default(now()) @db.Timestamp(0)
}
